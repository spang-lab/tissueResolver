% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_proportions.R
\name{cell_proportions_singlemodel}
\alias{cell_proportions_singlemodel}
\title{computes cell type proportions for single model (no bootstrap)}
\usage{
cell_proportions_singlemodel(
  tissuemodel,
  mapping = NULL,
  by = "celltype",
  weight = "weight",
  bulk_id = "bulk_id",
  cell_id = "cell_id"
)
}
\arguments{
\item{tissuemodel}{tissuemodel as returned by fit_tissue WITHOUT bootstrapping, or a data frame that contains cell ids, weights and a categorical variable, e.g., celltype}

\item{mapping}{dataframe that maps each cell (column name given by "cell_id") to a category (column name given by "by")}

\item{by}{name of the categorical variable defining groups of cells. defaults to "celltype"}

\item{weight}{name of the column that holds the fitted cell weights. defaults to "weight"}

\item{bulk_id}{name of the column that identifies the bulks. defaults to "bulk_id"}

\item{cell_id}{name of the column that identifies the cells. defaults to "cell_id"}
}
\value{
data frame holding the cumulated weights for each cell population within each bulk.
}
\description{
returns the sum over weights of certain cell populations (grouped by mapping for each bulk)
for a single tissue model retrieved by fit_tissue WITHOUT bootstrap.
}
\examples{
set.seed(1)
ngenes <- 4
nbulks <- 3
ncells <- 5

bulks <- matrix(runif(ngenes * nbulks), nrow = ngenes, ncol = nbulks)
sc <- matrix(runif(ngenes * ncells), nrow = ngenes, ncol = ncells)
bulknames <- paste0(rep("bulk_", nbulks), seq.int(1, nbulks))
cellnames <- paste0(rep("cell_", ncells), seq.int(1, ncells))
genenames_bulks <- paste0(rep("gene_", ngenes), seq.int(1, ngenes))
genenames_sc <- paste0(rep("gene_", ngenes), seq.int(1, ngenes))

rownames(bulks) <- genenames_bulks
rownames(sc) <- genenames_sc
colnames(bulks) <- bulknames
colnames(sc) <- cellnames

fitted_tissue <- fit_tissue(bulks, sc)

mapping <- tibble(
  cell_id = cellnames,
  celltype = c("CTA", "CTB", "CTA", "CTB", "CTA")
)

cp <- tissueResolver:::cell_proportions_singlemodel(
  tissuemodel = fitted_tissue,
  mapping = mapping,
  by = "celltype",
  weight = "weight",
  bulk_id = "bulk_id",
  cell_id = "cell_id"
)

}
