% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specific_expression.R
\name{explained_expression}
\alias{explained_expression}
\title{computes TOTAL explained expression for quality control}
\usage{
explained_expression(
  tissuemodel,
  sclibrary,
  by = "celltype",
  weight = "weight",
  bulk_id = "bulk_id",
  cell_id = "cell_id"
)
}
\arguments{
\item{tissuemodel}{tissuemodel as returned by fit_tissue}

\item{sclibrary}{single cell data matrix, columns are individual cells and must be indexable by the cell_ids contained in the celldf.}

\item{by}{name of the categorical variable. Here it  is only used as index and the corresponding value in the returned data frame will always be "total explained".
In particular it is here not used to group cells. defaults to "celltype"}

\item{weight}{name of the column that holds the fitted cell weights. defaults to "weight"}

\item{bulk_id}{name of the column that identifies the bulks. defaults to "bulk_id"}

\item{cell_id}{name of the column that contains the ids for the cells that match the column names of sclibrary. defaults to "cell_id"}
}
\value{
data frame holding the explained expression for each gene in each bulk
}
\description{
computes the TOTAL explained expression, i.e., the specific gene expression within each bulk.
I.e., it uses the weights computed in fit tissue to determine the explained specific expression of each gene in each bulk sample without grouping cells.
}
\examples{
set.seed(1)
ngenes <- 4
nbulks <- 3
ncells <- 5

bulks <- matrix(runif(ngenes * nbulks), nrow = ngenes, ncol = nbulks)
sc <- matrix(runif(ngenes * ncells), nrow = ngenes, ncol = ncells)
bulknames <- paste0(rep("bulk_", nbulks), seq.int(1, nbulks))
cellnames <- paste0(rep("cell_", ncells), seq.int(1, ncells))
genenames_bulks <- paste0(rep("gene_", ngenes), seq.int(1, ngenes))
genenames_sc <- paste0(rep("gene_", ngenes), seq.int(1, ngenes))

rownames(bulks) <- genenames_bulks
rownames(sc) <- genenames_sc
colnames(bulks) <- bulknames
colnames(sc) <- cellnames

fitted_tissue <- fit_tissue(bulks, sc)

mapping <- tibble(
  cell_id = cellnames,
  celltype = c("CTA", "CTB", "CTA", "CTB", "CTA")
)

csre_explained <- explained_expression(
            tissuemodel=fitted_tissue,
            sclibrary=sc,
            by="celltype",
            weight="weight",
            bulk_id = "bulk_id",
            cell_id="cell_id")

}
