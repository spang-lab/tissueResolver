% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specific_expression.R
\name{fast_specific_expression_regulation}
\alias{fast_specific_expression_regulation}
\title{computes specific expression and regulation}
\usage{
fast_specific_expression_regulation(
  tissuemodel,
  sclibrary,
  mapping,
  by = "celltype",
  weight = "weight",
  bulk_id = "bulk_id",
  cell_id = "cell_id",
  compute_total = TRUE
)
}
\arguments{
\item{tissuemodel}{tissuemodel tibble as returned by fit_tissue}

\item{sclibrary}{single cell data matrix, columns are individual cells and must be indexable by the cell_ids contained in the celldf.}

\item{mapping}{dataframe that maps each cell (column name given by "cell_id") to a category (column name given by "by")}

\item{by}{name of the categorical variable defining groups of cells. defaults to "celltype"}

\item{weight}{name of the column that holds the fitted cell weights. defaults to "weight"}

\item{bulk_id}{name of the column that identifies the bulks. defaults to "bulk_id"}

\item{cell_id}{name of the column that contains the ids for the cells that match the column names of sclibrary. defaults to "cell_id"}

\item{compute_total}{if set to TRUE, also computes the total expression explained by ALL cell types. Can be used to compare resulting virtual tissue to the bulk.}
}
\value{
data frame holding the expression and regulation of each gene within each bulk and celltype.
}
\description{
computes specific expression and regulation specific for certain groups of cells, weighting the individual cells accordingly.
normalization of the expression column is such that the total expression of a gene is approximately that of the bulk,
while the regulation column corresponds to the average expression of a single cell of that type.
This function provides the main computations accessed by specific_expression_regulation
}
\examples{
set.seed(1)
ngenes <- 4
nbulks <- 3
ncells <- 5

bulks <- matrix(runif(ngenes * nbulks), nrow = ngenes, ncol = nbulks)
sc <- matrix(runif(ngenes * ncells), nrow = ngenes, ncol = ncells)
bulknames <- paste0(rep("bulk_", nbulks), seq.int(1, nbulks))
cellnames <- paste0(rep("cell_", ncells), seq.int(1, ncells))
genenames_bulks <- paste0(rep("gene_", ngenes), seq.int(1, ngenes))
genenames_sc <- paste0(rep("gene_", ngenes), seq.int(1, ngenes))

rownames(bulks) <- genenames_bulks
rownames(sc) <- genenames_sc
colnames(bulks) <- bulknames
colnames(sc) <- cellnames

fitted_tissue <- fit_tissue(bulks, sc)

mapping <- tibble(
  cell_id = cellnames,
  celltype = c("CTA", "CTB", "CTA", "CTB", "CTA")
)

celldf <- fitted_tissue$tissuemodel \%>\% inner_join(mapping, by = "cell_id")

csre <- tissueResolver:::fast_specific_expression_regulation(
  tissuemodel = fitted_tissue,
  sclibrary = sc,
  mapping = mapping,
  by = "celltype",
  weight = "weight",
  bulk_id = "bulk_id",
  cell_id = "cell_id",
  compute_total = TRUE
)
}
